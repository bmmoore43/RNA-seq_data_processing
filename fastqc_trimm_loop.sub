# fastqc.sub
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs), the desired name of the HTCondor log file,
#  and the desired name of the standard error file.  
#  Wherever you see $(Cluster), HTCondor will insert the queue number
#  assigned to this set of jobs at the time of submission.
universe = vanilla
log = fastqc_$(Cluster).$(Process).log
error = fastqc_$(Cluster).$(Process).err
output = fastqc_$(cluster).$(Process).out
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
executable = fastqc_trimm.sh
arguments = $(infilepath1) $(infilepath2) $(infilepath3) $(infilepath4) $(infilepath5) $(infilepath6) $(infilepath7) $(infilepath8)
#
# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to run.
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_input_files = fastqc_v0.11.9.zip,Trimmomatic-0.39.zip,TruSeq3-PE.fa
# +IsBuildJob = true
requirements = (Target.HasJava == true) && (Target.HasCHTCStaging == true)
#
# Tell HTCondor what amount of compute resources
# each job will need on the computer where it runs.
request_cpus = 4
request_memory = 200GB
request_disk = 200GB
#+LongJob = true
#
# Tell HTCondor to loop through list to run each file as separate job:
queue infilepath1,infilepath2,infilepath3,infilepath4,infilepath5,infilepath6,infilepath7,infilepath8 from fastq_list4.csv
